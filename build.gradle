plugins {
    id 'java-library'
}

var oshCoreDir = "$projectDir/submodules/osh-core"

apply from: oshCoreDir + '/common.gradle'
group = 'org.sensorhub'
version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.eclipse.jetty.websocket:websocket-client:9.4.56.v20240826'
    implementation 'org.json:json:20240303'
    api 'org.sensorhub:sensorhub-core:' + oshCoreVersion
    implementation 'org.sensorhub:sensorhub-datastore-h2:' + oshCoreVersion
    implementation 'org.sensorhub:sensorhub-service-consys:' + oshCoreVersion

    implementation 'org.vast.opengis:swe-common-om:' + oshCoreVersion

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.awaitility:awaitility:4.2.2'


    testImplementation 'org.sensorhub:sensorhub-core:' + oshCoreVersion
    testImplementation 'org.sensorhub:sensorhub-core-osgi:' + oshCoreVersion
    testImplementation 'org.sensorhub:sensorhub-datastore-h2:' + oshCoreVersion
    testImplementation 'org.sensorhub:sensorhub-service-swe:' + oshCoreVersion
    testImplementation 'org.sensorhub:sensorhub-webui-core:' + oshCoreVersion
    testImplementation 'org.sensorhub:sensorhub-service-consys:' + oshCoreVersion

    testImplementation project(':sensorhub-driver-ffmpeg')

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

subprojects {
    repositories {
        mavenCentral()
        google()
    }

    apply plugin: 'java-library'

    ext.pom = {}
}

jar {
    enabled = true
    archiveBaseName.set('OSHConnect-Java')
    archiveVersion.set(version)
    destinationDirectory.set(file("$buildDir/libs"))
}

test {
    useJUnitPlatform()
}
